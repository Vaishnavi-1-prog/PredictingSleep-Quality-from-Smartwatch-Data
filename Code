# Install necessary library for extracting data from PDF
!pip install tabula-py

# Import libraries
import pandas as pd
from tabula import read_pdf
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
import matplotlib.pyplot as plt

# Upload the PDF file
from google.colab import files
uploaded = files.upload()

# Read the data from the uploaded PDF
# Replace 'synthetic_sleep_data.pdf' with the uploaded file name
file_name = list(uploaded.keys())[0]
data = read_pdf(file_name, pages='all')[0]

# Display the first few rows of the data
print(data.head())

# Clean column names (if needed)
data.columns = ['motion_sensor', 'heart_rate', 'screen_time', 'sleep_quality']

# Convert columns to numeric (if necessary)
data = data.apply(pd.to_numeric, errors='coerce')

# Drop rows with missing values
data = data.dropna()

# Define feature columns and target variable
features = ['motion_sensor', 'heart_rate', 'screen_time']
target = 'sleep_quality'

# Split the data into features (X) and target (y)
X = data[features]
y = data[target]

# Split into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize and train the regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Make predictions
y_pred = model.predict(X_test)

# Evaluate the model
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error: {mse}")
print(f"R-squared: {r2}")

# Plot actual vs predicted sleep quality
plt.figure(figsize=(8, 6))
plt.scatter(y_test, y_pred, alpha=0.7)
plt.plot([y.min(), y.max()], [y.min(), y.max()], color='red', linestyle='--')
plt.xlabel('Actual Sleep Quality')
plt.ylabel('Predicted Sleep Quality')
plt.title('Actual vs Predicted Sleep Quality')
plt.show()

# Print model coefficients
coefficients = pd.DataFrame(model.coef_, index=features, columns=['Coefficient'])
print(coefficients)
